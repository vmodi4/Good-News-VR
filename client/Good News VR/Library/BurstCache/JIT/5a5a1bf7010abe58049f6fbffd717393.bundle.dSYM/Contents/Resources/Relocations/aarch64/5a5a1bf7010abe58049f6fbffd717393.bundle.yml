---
triple:          'arm64-apple-darwin'
binary-path:     '/Users/bendomine/Documents/Coding/Good-News-VR/client/Good News VR/Temp/Burst/burst-aott9b6pcqw.oj3/5a5a1bf7010abe58049f6fbffd717393.bundle'
relocations:
  - { offset: 0x1E, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandOrientationUtility.GetHandAxisDirection(ref Unity.Mathematics.float3 result, UnityEngine.XR.Hands.Gestures.XRHandAxis handAxis, ref Unity.Mathematics.quaternion rootRotation, float handednessMultiplier) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x4F0, symSize: 0x1A4 }
  - { offset: 0x43, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandOrientationUtility.GetHandAxisDirection(ref Unity.Mathematics.float3 result, UnityEngine.XR.Hands.Gestures.XRHandAxis handAxis, ref Unity.Mathematics.quaternion rootRotation, float handednessMultiplier) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x4F0, symSize: 0x1A4 }
  - { offset: 0x13F, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.TargetCondition.GetReferenceDirection(ref Unity.Mathematics.float3 result, ref Unity.Mathematics.float3 rootPosition, ref UnityEngine.XR.Hands.Gestures.XRHandTargetRelativeDirection direction, ref Unity.Mathematics.RigidTransform handTrackingOrigin, ref Unity.Mathematics.RigidTransform targetTransform) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x6E4, symSize: 0x298 }
  - { offset: 0x182, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.TargetCondition.GetReferenceDirection(ref Unity.Mathematics.float3 result, ref Unity.Mathematics.float3 rootPosition, ref UnityEngine.XR.Hands.Gestures.XRHandTargetRelativeDirection direction, ref Unity.Mathematics.RigidTransform handTrackingOrigin, ref Unity.Mathematics.RigidTransform targetTransform) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x6E4, symSize: 0x298 }
  - { offset: 0x372, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateTipCurl(ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 pose1Position, ref Unity.Mathematics.quaternion pose1Rotation, ref Unity.Mathematics.float3 pose2Position, ref Unity.Mathematics.quaternion pose2Rotation, ref Unity.Mathematics.float3 pose3Position, float minimumDegrees1, float maximumDegrees1, float minimumDegrees2, float maximumDegrees2) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x9CC, symSize: 0x49C }
  - { offset: 0x3C1, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateTipCurl(ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 pose1Position, ref Unity.Mathematics.quaternion pose1Rotation, ref Unity.Mathematics.float3 pose2Position, ref Unity.Mathematics.quaternion pose2Rotation, ref Unity.Mathematics.float3 pose3Position, float minimumDegrees1, float maximumDegrees1, float minimumDegrees2, float maximumDegrees2) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x9CC, symSize: 0x49C }
  - { offset: 0x5A9, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandOrientationUtility.CheckDirectionAlignment(UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition condition, float threshold, bool ignorePositionY, ref Unity.Mathematics.float3 handAxisDirection, ref Unity.Mathematics.float3 referenceDirection) -> bool_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x54, symBinAddr: 0xEBC, symSize: 0x138 }
  - { offset: 0x5DA, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandOrientationUtility.CheckDirectionAlignment(UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition condition, float threshold, bool ignorePositionY, ref Unity.Mathematics.float3 handAxisDirection, ref Unity.Mathematics.float3 referenceDirection) -> bool_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x54, symBinAddr: 0xEBC, symSize: 0x138 }
  - { offset: 0x69E, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateBaseCurl(ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 position1, ref Unity.Mathematics.quaternion rotation1, ref Unity.Mathematics.float3 position2, float minimumDegrees, float maximumDegrees) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x15C0, symSize: 0x268 }
  - { offset: 0x6ED, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateBaseCurl(ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 position1, ref Unity.Mathematics.quaternion rotation1, ref Unity.Mathematics.float3 position2, float minimumDegrees, float maximumDegrees) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x15C0, symSize: 0x268 }
  - { offset: 0x815, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath+CalculateFullCurl_0000018C$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.XRHandFingerID, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null fingerID, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position0, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position1, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation1, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position2, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation2, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position3, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation3, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position4, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees3, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees3) -> System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x60, symBinAddr: 0x1888, symSize: 0x6DC }
  - { offset: 0x85E, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath+CalculateFullCurl_0000018C$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.XRHandFingerID, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null fingerID, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position0, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position1, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation1, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position2, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation2, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position3, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation3, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position4, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees3, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees3) -> System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x60, symBinAddr: 0x1888, symSize: 0x6DC }
  - { offset: 0x873, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath+CalculateFullCurl_0000018C$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.XRHandFingerID, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null fingerID, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position0, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position1, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation1, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position2, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation2, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position3, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation3, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position4, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees3, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees3) -> System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x60, symBinAddr: 0x1888, symSize: 0x6DC }
  - { offset: 0x886, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath+CalculateFullCurl_0000018C$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.XRHandFingerID, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null fingerID, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position0, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position1, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation1, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position2, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation2, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position3, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation3, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position4, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees3, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees3) -> System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x60, symBinAddr: 0x1888, symSize: 0x6DC }
  - { offset: 0x89A, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath+CalculateFullCurl_0000018C$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.XRHandFingerID, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null fingerID, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position0, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position1, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation1, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position2, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation2, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position3, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation3, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position4, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees3, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees3) -> System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x60, symBinAddr: 0x1888, symSize: 0x6DC }
  - { offset: 0x8AD, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath+CalculateFullCurl_0000018C$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.XRHandFingerID, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null fingerID, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position0, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position1, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation1, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position2, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation2, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position3, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rotation3, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null position4, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees1, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees2, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 minimumDegrees3, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 maximumDegrees3) -> System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x60, symBinAddr: 0x1888, symSize: 0x6DC }
  - { offset: 0xAA4, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateFullCurl(UnityEngine.XR.Hands.XRHandFingerID fingerID, ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 position1, ref Unity.Mathematics.quaternion rotation1, ref Unity.Mathematics.float3 position2, ref Unity.Mathematics.quaternion rotation2, ref Unity.Mathematics.float3 position3, ref Unity.Mathematics.quaternion rotation3, ref Unity.Mathematics.float3 position4, float minimumDegrees1, float maximumDegrees1, float minimumDegrees2, float maximumDegrees2, float minimumDegrees3, float maximumDegrees3) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x73C, symBinAddr: 0x1F64, symSize: 0x18 }
  - { offset: 0xAD3, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.LocalizeTo(ref Unity.Mathematics.float3 localized, ref Unity.Mathematics.float3 poseDefinitingSpacePosition, ref Unity.Mathematics.quaternion poseDefinitingSpaceRotationInverse, ref Unity.Mathematics.float3 positionToConvert) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x1FCC, symSize: 0xA0 }
  - { offset: 0xAF8, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.LocalizeTo(ref Unity.Mathematics.float3 localized, ref Unity.Mathematics.float3 poseDefinitingSpacePosition, ref Unity.Mathematics.quaternion poseDefinitingSpaceRotationInverse, ref Unity.Mathematics.float3 positionToConvert) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x1FCC, symSize: 0xA0 }
  - { offset: 0xB7D, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.XRHandSkeletonDriver.CalculateLocalTransformPose(ref UnityEngine.Pose parentPose, ref UnityEngine.Pose jointPose, ref UnityEngine.Pose jointLocalPose) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x70, symBinAddr: 0x20DC, symSize: 0x1D0 }
  - { offset: 0xBB4, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.XRHandSkeletonDriver.CalculateLocalTransformPose(ref UnityEngine.Pose parentPose, ref UnityEngine.Pose jointPose, ref UnityEngine.Pose jointLocalPose) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x70, symBinAddr: 0x20DC, symSize: 0x1D0 }
  - { offset: 0xC38, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation+TargetCondition+CheckConditionBursted_00000231$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.Gestures.XRHandAxis, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null xrHandAxis, UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null condition, UnityEngine.XR.Hands.Gestures.XRHandTargetRelativeDirection, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null direction, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 threshold, System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 ignorePositionY, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rootPosition, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rootRotation, Unity.Mathematics.RigidTransform&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null originTransform, Unity.Mathematics.RigidTransform&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null targetTransform, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 handednessMultiplier) -> System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x54, symBinAddr: 0x2300, symSize: 0x500 }
  - { offset: 0xCC3, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation+TargetCondition+CheckConditionBursted_00000231$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(UnityEngine.XR.Hands.Gestures.XRHandAxis, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null xrHandAxis, UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null condition, UnityEngine.XR.Hands.Gestures.XRHandTargetRelativeDirection, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null direction, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 threshold, System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 ignorePositionY, Unity.Mathematics.float3&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rootPosition, Unity.Mathematics.quaternion&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null rootRotation, Unity.Mathematics.RigidTransform&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null originTransform, Unity.Mathematics.RigidTransform&, Unity.Mathematics, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null targetTransform, System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 handednessMultiplier) -> System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x54, symBinAddr: 0x2300, symSize: 0x500 }
  - { offset: 0x1018, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.TargetCondition.CheckConditionBursted(UnityEngine.XR.Hands.Gestures.XRHandAxis xrHandAxis, UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition condition, UnityEngine.XR.Hands.Gestures.XRHandTargetRelativeDirection direction, float threshold, bool ignorePositionY, ref Unity.Mathematics.float3 rootPosition, ref Unity.Mathematics.quaternion rootRotation, ref Unity.Mathematics.RigidTransform originTransform, ref Unity.Mathematics.RigidTransform targetTransform, float handednessMultiplier) -> bool_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x554, symBinAddr: 0x2800, symSize: 0x10 }
  - { offset: 0x1047, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.UserCondition.GetReferenceDirection(ref Unity.Mathematics.float3 result, ref Unity.Mathematics.float3 handPosition, UnityEngine.XR.Hands.Gestures.XRHandUserRelativeDirection direction, ref Unity.Mathematics.RigidTransform handTrackingOrigin, ref Unity.Mathematics.RigidTransform headTransform, float handednessMultiplier) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x2860, symSize: 0x324 }
  - { offset: 0x108A, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.UserCondition.GetReferenceDirection(ref Unity.Mathematics.float3 result, ref Unity.Mathematics.float3 handPosition, UnityEngine.XR.Hands.Gestures.XRHandUserRelativeDirection direction, ref Unity.Mathematics.RigidTransform handTrackingOrigin, ref Unity.Mathematics.RigidTransform headTransform, float handednessMultiplier) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x2860, symSize: 0x324 }
  - { offset: 0x129D, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.UserCondition.CheckConditionBursted(UnityEngine.XR.Hands.Gestures.XRHandAxis handAxis, UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition alignmentCondition, UnityEngine.XR.Hands.Gestures.XRHandUserRelativeDirection referenceDirection, float tolerance, ref Unity.Mathematics.float3 rootPosition, ref Unity.Mathematics.quaternion rootRotation, ref Unity.Mathematics.RigidTransform originTransform, ref Unity.Mathematics.RigidTransform headTransform, bool ignorePositionY, float handednessMultiplier) -> bool_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x54, symBinAddr: 0x2BD8, symSize: 0x2F8 }
  - { offset: 0x12FE, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRHandRelativeOrientation.UserCondition.CheckConditionBursted(UnityEngine.XR.Hands.Gestures.XRHandAxis handAxis, UnityEngine.XR.Hands.Gestures.XRHandAlignmentCondition alignmentCondition, UnityEngine.XR.Hands.Gestures.XRHandUserRelativeDirection referenceDirection, float tolerance, ref Unity.Mathematics.float3 rootPosition, ref Unity.Mathematics.quaternion rootRotation, ref Unity.Mathematics.RigidTransform originTransform, ref Unity.Mathematics.RigidTransform headTransform, bool ignorePositionY, float handednessMultiplier) -> bool_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x54, symBinAddr: 0x2BD8, symSize: 0x2F8 }
  - { offset: 0x14BE, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateBaseCurlThumb(ref Unity.Mathematics.float3 wristPosition, ref Unity.Mathematics.quaternion wristRotation, ref Unity.Mathematics.float3 thisPosition1, ref Unity.Mathematics.float3 thisPosition2, ref Unity.Mathematics.float3 nextPosition1, ref Unity.Mathematics.float3 nextPosition2, float minimumDegrees, float maximumDegrees) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x2F20, symSize: 0x338 }
  - { offset: 0x1513, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateBaseCurlThumb(ref Unity.Mathematics.float3 wristPosition, ref Unity.Mathematics.quaternion wristRotation, ref Unity.Mathematics.float3 thisPosition1, ref Unity.Mathematics.float3 thisPosition2, ref Unity.Mathematics.float3 nextPosition1, ref Unity.Mathematics.float3 nextPosition2, float minimumDegrees, float maximumDegrees) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x2F20, symSize: 0x338 }
  - { offset: 0x16F4, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculatePinch(ref Unity.Mathematics.float3 fingerTipPosition, ref Unity.Mathematics.float3 thumbTipPosition, float minimumDistance, float maximumDistance) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x32A8, symSize: 0x78 }
  - { offset: 0x1719, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculatePinch(ref Unity.Mathematics.float3 fingerTipPosition, ref Unity.Mathematics.float3 thumbTipPosition, float minimumDistance, float maximumDistance) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x32A8, symSize: 0x78 }
  - { offset: 0x179A, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateSpread(UnityEngine.XR.Hands.Handedness handedness, UnityEngine.XR.Hands.XRHandFingerID fingerID, ref Unity.Mathematics.float3 wristPosition, ref Unity.Mathematics.quaternion wristRotation, ref Unity.Mathematics.float3 thisPosition1, ref Unity.Mathematics.float3 thisPosition2, ref Unity.Mathematics.float3 nextPosition1, ref Unity.Mathematics.float3 nextPosition2, float minimumDegrees, float maximumDegrees) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x3370, symSize: 0x378 }
  - { offset: 0x17EF, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.CalculateSpread(UnityEngine.XR.Hands.Handedness handedness, UnityEngine.XR.Hands.XRHandFingerID fingerID, ref Unity.Mathematics.float3 wristPosition, ref Unity.Mathematics.quaternion wristRotation, ref Unity.Mathematics.float3 thisPosition1, ref Unity.Mathematics.float3 thisPosition2, ref Unity.Mathematics.float3 nextPosition1, ref Unity.Mathematics.float3 nextPosition2, float minimumDegrees, float maximumDegrees) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x3370, symSize: 0x378 }
  - { offset: 0x19C0, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.ConvertIntegerToString(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 value, Unity.Burst.BurstString+FormatOptions, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null options) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0xA0, symBinAddr: 0x3788, symSize: 0x120 }
  - { offset: 0x19DF, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.ConvertIntegerToString(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 value, Unity.Burst.BurstString+FormatOptions, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null options) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0xA0, symBinAddr: 0x3788, symSize: 0x120 }
  - { offset: 0x1A25, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.ConvertUnsignedIntegerToString(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, System.UInt64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 value, Unity.Burst.BurstString+FormatOptions, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null options) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x1C0, symBinAddr: 0x38A8, symSize: 0x118 }
  - { offset: 0x1A7D, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Format(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 src, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 srcLength, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 formatOptionsRaw) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x2D8, symBinAddr: 0x39C0, symSize: 0x134 }
  - { offset: 0x1AEB, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Format(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 value, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 formatOptionsRaw) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x40C, symBinAddr: 0x3AF4, symSize: 0x30 }
  - { offset: 0x1B02, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.FormatGeneral(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, Unity.Burst.BurstString+NumberBuffer&, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null number, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 nMaxDigits, System.Byte, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 expChar) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x43C, symBinAddr: 0x3B24, symSize: 0x17C }
  - { offset: 0x1B46, size: 0x8, addend: 0x0, symName: '_Unity.Burst.BurstString, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.FormatNumber(System.Byte*, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 dest, System.Int32&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destIndex, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 destLength, Unity.Burst.BurstString+NumberBuffer&, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null number, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 nMaxDigits, Unity.Burst.BurstString+FormatOptions, Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null options) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_44c48ff11e25af8c5a231a1e6967bd65 from Unity.Burst, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x5B8, symBinAddr: 0x3CA0, symSize: 0x46C }
  - { offset: 0x1C46, size: 0x8, addend: 0x0, symName: '_Unity.Collections.NativeArray`1[[UnityEngine.Pose, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.FailOutOfRangeError(Unity.Collections.NativeArray`1[[UnityEngine.Pose, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]*, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null this, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 index) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_aaaff58bdce476e006d3a95c8933df9f from UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0xA24, symBinAddr: 0x410C, symSize: 0x25C }
  - { offset: 0x1C95, size: 0x8, addend: 0x0, symName: '_Unity.Collections.NativeArray`1[[UnityEngine.XR.Hands.XRHandJoint, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.FailOutOfRangeError(Unity.Collections.NativeArray`1[[UnityEngine.XR.Hands.XRHandJoint, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]*, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null this, System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 index) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_aaaff58bdce476e006d3a95c8933df9f from UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0xC80, symBinAddr: 0x4368, symSize: 0x25C }
  - { offset: 0x1D62, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.XRHandSkeletonDriver+CalculateJointTransformLocalPoses_00000099$BurstDirectCall, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null.Invoke(Unity.Collections.NativeArray`1[[UnityEngine.XR.Hands.XRHandJoint, Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]&, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null joints, Unity.Collections.NativeArray`1[[UnityEngine.Pose, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]&, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null jointLocalPoses) -> System.Void, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0xEDC, symBinAddr: 0x45C4, symSize: 0x76C }
  - { offset: 0x1FD2, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.XRHandSkeletonDriver.CalculateJointTransformLocalPoses(ref Unity.Collections.NativeArray`1<UnityEngine.XR.Hands.XRHandJoint> joints, ref Unity.Collections.NativeArray`1<UnityEngine.Pose> jointLocalPoses) -> void_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x1648, symBinAddr: 0x4D30, symSize: 0x10 }
  - { offset: 0x2001, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.DegreesBetween(ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 position1, ref Unity.Mathematics.quaternion rotation1, ref Unity.Mathematics.float3 position2) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x4E5C, symSize: 0x250 }
  - { offset: 0x2038, size: 0x8, addend: 0x0, symName: '_UnityEngine.XR.Hands.Gestures.XRFingerShapeMath.DegreesBetween(ref Unity.Mathematics.float3 position0, ref Unity.Mathematics.float3 position1, ref Unity.Mathematics.quaternion rotation1, ref Unity.Mathematics.float3 position2) -> float_b4d664853faa14211f9054ef7c1b5801 from Unity.XR.Hands, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null', symObjAddr: 0x50, symBinAddr: 0x4E5C, symSize: 0x250 }
...
